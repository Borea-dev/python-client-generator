# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...trieve_api import TrieveApi


class SetRagQueryRating:
    def __init__(self, parent: "TrieveApi"):
        self.parent = parent

    def set_rag_query_rating(
        self,
        tr_dataset: str,
        query_id: str,
        rating: int,
        note: Optional[str] = None,
    ) -> Any:
        """
        This route allows you to Rate a RAG query.

        Args:
            tr_dataset: The dataset id or tracking_id to use for the request. We assume you intend to use an id if the value is a valid uuid.
            query_id: No description provided
            rating: No description provided
            note: No description provided

        Returns:
            Response data
        """
        path = f"/api/analytics/rag"
        params = {}
        headers = {}
        if tr_dataset is not None:
            headers["TR-Dataset"] = tr_dataset
        json_data = {
            "note": note if note is not None else None,
            "query_id": query_id if query_id is not None else None,
            "rating": rating if rating is not None else None,
        }
        json_data = {k: v for k, v in json_data.items() if v is not None}

        response = self.parent._make_request(
            method="PUT",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
