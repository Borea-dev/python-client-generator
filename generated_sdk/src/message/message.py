# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ...models.models import *

from .create_message.create_message import CreateMessage
from .edit_message.edit_message import EditMessage
from .regenerate_message.regenerate_message import RegenerateMessage
from .regenerate_message_patch.regenerate_message_patch import RegenerateMessagePatch
from .get_tool_function_params.get_tool_function_params import GetToolFunctionParams
from .get_message_by_id.get_message_by_id import GetMessageById
from .get_all_topic_messages.get_all_topic_messages import GetAllTopicMessages

if TYPE_CHECKING:
    from ..trieve_api import TrieveApi


class Message:
    def __init__(self, parent: "TrieveApi"):
        """
        Message chat endpoint. Messages are units belonging to a topic in the context of a chat with a LLM. There are system, user, and assistant messages.

        Args:
            parent: The parent client to use for the requests
        """
        self.parent = parent

        self.create_message = CreateMessage(parent=parent).create_message
        self.edit_message = EditMessage(parent=parent).edit_message
        self.regenerate_message = RegenerateMessage(parent=parent).regenerate_message
        self.regenerate_message_patch = RegenerateMessagePatch(
            parent=parent
        ).regenerate_message_patch
        self.get_tool_function_params = GetToolFunctionParams(
            parent=parent
        ).get_tool_function_params
        self.get_message_by_id = GetMessageById(parent=parent).get_message_by_id
        self.get_all_topic_messages = GetAllTopicMessages(
            parent=parent
        ).get_all_topic_messages
