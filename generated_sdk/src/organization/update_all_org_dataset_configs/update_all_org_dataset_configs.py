# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...trieve_api import TrieveApi


class UpdateAllOrgDatasetConfigs:
    def __init__(self, parent: "TrieveApi"):
        self.parent = parent

    def update_all_org_dataset_configs(
        self,
        tr_organization: str,
        dataset_config: Any,
    ) -> Any:
        """
        Update the configurations for all datasets in an organization. Only the specified keys in the configuration object will be changed per dataset such that you can preserve dataset unique values. Auth'ed user or api key must have an owner role for the specified organization.

        Args:
            tr_organization: The organization id to use for the request
            dataset_config: The new configuration for all datasets in the organization. Only the specified keys in the configuration object will be changed per dataset such that you can preserve dataset unique values.

        Returns:
            Response data
        """
        path = f"/api/organization/update_dataset_configs"
        params = {}
        headers = {}
        if tr_organization is not None:
            headers["TR-Organization"] = tr_organization
        json_data = {
            "dataset_config": dataset_config if dataset_config is not None else None,
        }
        json_data = {k: v for k, v in json_data.items() if v is not None}

        response = self.parent._make_request(
            method="POST",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
