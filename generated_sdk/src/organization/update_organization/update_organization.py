# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...trieve_api import TrieveApi


class UpdateOrganization:
    def __init__(self, parent: "TrieveApi"):
        self.parent = parent

    def update_organization(
        self,
        tr_organization: str,
        name: Optional[str] = None,
        partner_configuration: Optional[Any] = None,
    ) -> Any:
        """
        Update an organization. Only the owner of the organization can update it.

        Args:
            tr_organization: The organization id to use for the request
            name: The new name of the organization. If not provided, the name will not be updated.
            partner_configuration: New details for the partnership configuration. If not provided, the partnership configuration will not be updated.

        Returns:
            Response data
        """
        path = f"/api/organization"
        params = {}
        headers = {}
        if tr_organization is not None:
            headers["TR-Organization"] = tr_organization
        json_data = {
            "name": name if name is not None else None,
            "partner_configuration": (
                partner_configuration if partner_configuration is not None else None
            ),
        }
        json_data = {k: v for k, v in json_data.items() if v is not None}

        response = self.parent._make_request(
            method="PUT",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
