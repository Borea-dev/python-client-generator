# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...trieve_api import TrieveApi


class GetAllTags:
    def __init__(self, parent: "TrieveApi"):
        self.parent = parent

    def get_all_tags(
        self,
        tr_dataset: str,
        page: Optional[int] = None,
        page_size: Optional[int] = None,
    ) -> Any:
        """
        Scroll through all tags in the dataset and get the number of chunks in the dataset with that tag plus the total number of unique tags for the whole datset.

        Args:
            tr_dataset: The dataset id or tracking_id to use for the request. We assume you intend to use an id if the value is a valid uuid.
            page: Page number to return, 1-indexed. Default is 1.
            page_size: Number of items to return per page. Default is 20.

        Returns:
            Response data
        """
        path = f"/api/dataset/get_all_tags"
        params = {}
        headers = {}
        if tr_dataset is not None:
            headers["TR-Dataset"] = tr_dataset
        json_data = {
            "page": page if page is not None else None,
            "page_size": page_size if page_size is not None else None,
        }
        json_data = {k: v for k, v in json_data.items() if v is not None}

        response = self.parent._make_request(
            method="POST",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
