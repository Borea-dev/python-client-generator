# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...trieve_api import TrieveApi


class CreateCrawl:
    def __init__(self, parent: "TrieveApi"):
        self.parent = parent

    def create_crawl(
        self,
        tr_dataset: str,
        crawl_options: CrawlOptions,
    ) -> Any:
        """
        This endpoint is used to create a new crawl request for a dataset. The request payload should contain the crawl options to use for the crawl.

        Args:
            tr_dataset: The dataset id to use for the request
            crawl_options: Options for setting up the crawl which will populate the dataset.

        Returns:
            Response data
        """
        path = f"/api/crawl"
        params = {}
        headers = {}
        if tr_dataset is not None:
            headers["TR-Dataset"] = tr_dataset
        json_data = {
            "crawl_options": crawl_options if crawl_options is not None else None,
        }
        json_data = {k: v for k, v in json_data.items() if v is not None}

        response = self.parent._make_request(
            method="POST",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
