# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ...models.models import *

from .get_dataset_files_handler.get_dataset_files_handler import GetDatasetFilesHandler
from .upload_file_handler.upload_file_handler import UploadFileHandler
from .create_presigned_url_for_csv_jsonl.create_presigned_url_for_csv_jsonl import (
    CreatePresignedUrlForCsvJsonl,
)
from .upload_html_page.upload_html_page import UploadHtmlPage
from .get_file_handler.get_file_handler import GetFileHandler
from .delete_file_handler.delete_file_handler import DeleteFileHandler

if TYPE_CHECKING:
    from ..trieve_api import TrieveApi


class File:
    def __init__(self, parent: "TrieveApi"):
        """
        File endpoint. When files are uploaded, they are stored in S3 and broken up into chunks with text extraction from Apache Tika. You can upload files of pretty much any type up to 1GB in size. See chunking algorithm details at `docs.trieve.ai` for more information on how chunking works. Improved default chunking is on our roadmap.

        Args:
            parent: The parent client to use for the requests
        """
        self.parent = parent

        self.get_dataset_files_handler = GetDatasetFilesHandler(
            parent=parent
        ).get_dataset_files_handler
        self.upload_file_handler = UploadFileHandler(parent=parent).upload_file_handler
        self.create_presigned_url_for_csv_jsonl = CreatePresignedUrlForCsvJsonl(
            parent=parent
        ).create_presigned_url_for_csv_jsonl
        self.upload_html_page = UploadHtmlPage(parent=parent).upload_html_page
        self.get_file_handler = GetFileHandler(parent=parent).get_file_handler
        self.delete_file_handler = DeleteFileHandler(parent=parent).delete_file_handler
