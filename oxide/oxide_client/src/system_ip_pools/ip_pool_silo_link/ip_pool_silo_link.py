# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...oxide_region_api import OxideRegionAPI


class IpPoolSiloLink:
    def __init__(self, parent: "OxideRegionAPI"):
        self.parent = parent

    def ip_pool_silo_link(
        self,
        pool: NameOrId,
        is_default: bool,
        silo: NameOrId,
    ) -> Any:
        """
        Users in linked silos can allocate external IPs from this pool for their instances. A silo can have at most one default pool. IPs are allocated from the default pool when users ask for one without specifying a pool.

        Args:
            pool: Name or ID of the IP pool
            is_default: When a pool is the default for a silo, floating IPs and instance ephemeral IPs will come from that pool when no other pool is specified. There can be at most one default for a given silo.
            silo: No description provided

        Returns:
            Response data
        """
        path = f"/v1/system/ip-pools/{pool}/silos"
        params = {}
        headers = {}
        json_data = {
            "is_default": is_default if is_default is not None else None,
            "silo": silo if silo is not None else None,
        }
        json_data = {k: v for k, v in json_data.items() if v is not None}

        response = self.parent._make_request(
            method="POST",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
