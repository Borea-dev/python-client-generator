# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...oxide_region_api import OxideRegionAPI


class InstanceNetworkInterfaceUpdate:
    def __init__(self, parent: "OxideRegionAPI"):
        self.parent = parent

    def instance_network_interface_update(
        self,
        interface: NameOrId,
        instance: Optional[NameOrId] = None,
        project: Optional[NameOrId] = None,
        description: Optional[str] = None,
        name: Optional[Name] = None,
        primary: Optional[bool] = None,
        transit_ips: Optional[List[IpNet]] = None,
    ) -> Any:
        """


                Args:
                    interface: Name or ID of the network interface
                    instance: Name or ID of the instance
                    project: Name or ID of the project, only required if `instance` is provided as a `Name`
                    description: Parameters for updating an `InstanceNetworkInterface`

        Note that modifying IP addresses for an interface is not yet supported, a new interface must be created instead.
                    name: Names must begin with a lower case ASCII letter, be composed exclusively of lowercase ASCII, uppercase ASCII, numbers, and '-', and may not end with a '-'. Names cannot be a UUID, but they may contain a UUID. They can be at most 63 characters long.
                    primary: Make a secondary interface the instance's primary interface.

        If applied to a secondary interface, that interface will become the primary on the next reboot of the instance. Note that this may have implications for routing between instances, as the new primary interface will be on a distinct subnet from the previous primary interface.

        Note that this can only be used to select a new primary interface for an instance. Requests to change the primary interface into a secondary will return an error.
                    transit_ips: A set of additional networks that this interface may send and receive traffic on.

                Returns:
                    Response data
        """
        path = f"/v1/network-interfaces/{interface}"
        params = {}
        headers = {}
        if instance is not None:
            params["instance"] = instance
        if project is not None:
            params["project"] = project
        json_data = {
            "description": description if description is not None else None,
            "name": name if name is not None else None,
            "primary": primary if primary is not None else None,
            "transit_ips": transit_ips if transit_ips is not None else None,
        }
        json_data = {k: v for k, v in json_data.items() if v is not None}

        response = self.parent._make_request(
            method="PUT",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
