# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...oxide_region_api import OxideRegionAPI


class VpcRouterRouteList:
    def __init__(self, parent: "OxideRegionAPI"):
        self.parent = parent

    def vpc_router_route_list(
        self,
        limit: Optional[int] = None,
        page_token: Optional[str] = None,
        project: Optional[NameOrId] = None,
        router: Optional[NameOrId] = None,
        sort_by: Optional[NameOrIdSortMode] = None,
        vpc: Optional[NameOrId] = None,
    ) -> Any:
        """
        List the routes associated with a router in a particular VPC.

        Args:
            limit: Maximum number of items returned by a single call
            page_token: Token returned by previous call to retrieve the subsequent page
            project: Name or ID of the project, only required if `vpc` is provided as a `Name`
            router: Name or ID of the router
            sort_by:
            vpc: Name or ID of the VPC, only required if `router` is provided as a `Name`

        Returns:
            Response data
        """
        path = f"/v1/vpc-router-routes"
        params = {}
        headers = {}
        if limit is not None:
            params["limit"] = limit
        if page_token is not None:
            params["page_token"] = page_token
        if project is not None:
            params["project"] = project
        if router is not None:
            params["router"] = router
        if sort_by is not None:
            params["sort_by"] = sort_by
        if vpc is not None:
            params["vpc"] = vpc
        json_data = None

        response = self.parent._make_request(
            method="GET",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
