# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...oxide_region_api import OxideRegionAPI


class VpcRouterCreate:
    def __init__(self, parent: "OxideRegionAPI"):
        self.parent = parent

    def vpc_router_create(
        self,
        vpc: NameOrId,
        description: str,
        name: Name,
        project: Optional[NameOrId] = None,
    ) -> Any:
        """


        Args:
            vpc: Name or ID of the VPC
            description: Create-time parameters for a `VpcRouter`
            name: Names must begin with a lower case ASCII letter, be composed exclusively of lowercase ASCII, uppercase ASCII, numbers, and '-', and may not end with a '-'. Names cannot be a UUID, but they may contain a UUID. They can be at most 63 characters long.
            project: Name or ID of the project, only required if `vpc` is provided as a `Name`

        Returns:
            Response data
        """
        path = f"/v1/vpc-routers"
        params = {}
        headers = {}
        if project is not None:
            params["project"] = project
        if vpc is not None:
            params["vpc"] = vpc
        json_data = {
            "description": description if description is not None else None,
            "name": name if name is not None else None,
        }
        json_data = {k: v for k, v in json_data.items() if v is not None}

        response = self.parent._make_request(
            method="POST",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
