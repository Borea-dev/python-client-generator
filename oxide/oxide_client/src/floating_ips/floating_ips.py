# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ...models.models import *

from .floating_ip_list.floating_ip_list import FloatingIpList
from .floating_ip_create.floating_ip_create import FloatingIpCreate
from .floating_ip_view.floating_ip_view import FloatingIpView
from .floating_ip_update.floating_ip_update import FloatingIpUpdate
from .floating_ip_delete.floating_ip_delete import FloatingIpDelete
from .floating_ip_attach.floating_ip_attach import FloatingIpAttach
from .floating_ip_detach.floating_ip_detach import FloatingIpDetach

if TYPE_CHECKING:
    from ..oxide_region_api import OxideRegionAPI


class FloatingIps:
    def __init__(self, parent: "OxideRegionAPI"):
        """
        Floating IPs allow a project to allocate well-known IPs to instances.

        Args:
            parent: The parent client to use for the requests
        """
        self.parent = parent

        self.floating_ip_list = FloatingIpList(parent=parent).floating_ip_list
        self.floating_ip_create = FloatingIpCreate(parent=parent).floating_ip_create
        self.floating_ip_view = FloatingIpView(parent=parent).floating_ip_view
        self.floating_ip_update = FloatingIpUpdate(parent=parent).floating_ip_update
        self.floating_ip_delete = FloatingIpDelete(parent=parent).floating_ip_delete
        self.floating_ip_attach = FloatingIpAttach(parent=parent).floating_ip_attach
        self.floating_ip_detach = FloatingIpDetach(parent=parent).floating_ip_detach
