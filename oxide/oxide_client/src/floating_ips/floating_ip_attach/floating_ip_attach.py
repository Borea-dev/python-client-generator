# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...oxide_region_api import OxideRegionAPI


class FloatingIpAttach:
    def __init__(self, parent: "OxideRegionAPI"):
        self.parent = parent

    def floating_ip_attach(
        self,
        floating_ip: NameOrId,
        kind: FloatingIpParentKind,
        parent: NameOrId,
        project: Optional[NameOrId] = None,
    ) -> Any:
        """
        Attach floating IP to an instance or other resource.

        Args:
            floating_ip: Name or ID of the floating IP
            kind: The type of resource that a floating IP is attached to
            parent: No description provided
            project: Name or ID of the project

        Returns:
            Response data
        """
        path = f"/v1/floating-ips/{floating_ip}/attach"
        params = {}
        headers = {}
        if project is not None:
            params["project"] = project
        json_data = {
            "kind": kind if kind is not None else None,
            "parent": parent if parent is not None else None,
        }
        json_data = {k: v for k, v in json_data.items() if v is not None}

        response = self.parent._make_request(
            method="POST",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
