# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...oxide_region_api import OxideRegionAPI


class LoginLocal:
    def __init__(self, parent: "OxideRegionAPI"):
        self.parent = parent

    def login_local(
        self,
        silo_name: Name,
        password: Password,
        username: UserId,
    ) -> Any:
        """


        Args:
            silo_name:
            password: Passwords may be subject to additional constraints.
            username: Usernames must begin with a lower case ASCII letter, be composed exclusively of lowercase ASCII, uppercase ASCII, numbers, and '-', and may not end with a '-'. Usernames cannot be a UUID, but they may contain a UUID. They can be at most 63 characters long.

        Returns:
            Response data
        """
        path = f"/v1/login/{silo_name}/local"
        params = {}
        headers = {}
        json_data = {
            "password": password if password is not None else None,
            "username": username if username is not None else None,
        }
        json_data = {k: v for k, v in json_data.items() if v is not None}

        response = self.parent._make_request(
            method="POST",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
