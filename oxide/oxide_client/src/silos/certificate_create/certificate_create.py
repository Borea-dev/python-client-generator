# generated by borea

# if you want to edit this file, add it to ignores in borea.config.json, glob syntax

# TODO: not implemented

from typing import Any, Dict, List, Optional, Union, TYPE_CHECKING
from ....models.models import *

if TYPE_CHECKING:
    from ...oxide_region_api import OxideRegionAPI


class CertificateCreate:
    def __init__(self, parent: "OxideRegionAPI"):
        self.parent = parent

    def certificate_create(
        self,
        cert: str,
        description: str,
        key: str,
        name: Name,
        service: ServiceUsingCertificate,
    ) -> Any:
        """
        This certificate is automatically used by the Oxide Control plane to serve external connections.

        Args:
            cert: PEM-formatted string containing public certificate chain
            description: Create-time parameters for a `Certificate`
            key: PEM-formatted string containing private key
            name: Names must begin with a lower case ASCII letter, be composed exclusively of lowercase ASCII, uppercase ASCII, numbers, and '-', and may not end with a '-'. Names cannot be a UUID, but they may contain a UUID. They can be at most 63 characters long.
            service: This certificate is intended for access to the external API.

        Returns:
            Response data
        """
        path = f"/v1/certificates"
        params = None
        headers = None
        json_data = {
            "cert": cert if cert is not None else None,
            "description": description if description is not None else None,
            "key": key if key is not None else None,
            "name": name if name is not None else None,
            "service": service if service is not None else None,
        }
        json_data = {k: v for k, v in json_data.items() if v is not None}

        response = self.parent._make_request(
            method="POST",
            path=path,
            params=params,
            headers=headers,
            json_data=json_data,
        )
        return response.json()
