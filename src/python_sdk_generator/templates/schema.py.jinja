# generated by borea:

{#
from typing import Any, Dict, List, Optional, Union
from pydantic import BaseModel, Field
#}
from .{{ models_filename }} import {{ schema_name }}
{#
class {{ schema_name }}(BaseModel):
    """{{ schema_data.get('description', 'Represents ' + schema_name + ' data') }}"""
    {% for prop_name, prop_data in schema_data.get('properties', {}).items() %}
    {{ prop_name }}: {% if prop_data.get('type') == 'array' %}List[{{ prop_data.get('items', {}).get('type', 'Any') }}]{% else %}{{ prop_data.get('type', 'Any') }}{% endif %} = Field(
        default={% if prop_data.get('default') is not none %}{{ prop_data.get('default') }}{% else %}None{% endif %},
        description="{{ description }}"
    {% endfor %}
#}